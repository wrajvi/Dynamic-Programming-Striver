//https://leetcode.com/problems/fibonacci-number/
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define mod 1000000007
#define endl "\n"
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
class Solution {
public:
   
    int fib(int n) {
        vector<int> dp(n+2,0);
        dp[0]=0;
        dp[1]=1;
        for(int i=2;i<=n;i++)
        {
            dp[i]=dp[i-1]+dp[i-2];
            
        }
        return dp[n];
        
    }
};
int main()
{
	int n;
	cin>>n;
	Solution o;
	cout<<o.fib(n)<<endl;
}
Tabulation:
Timecomplexity:O(N)
Space Complexity:O(N)


////////////////////////////////////////////
class Solution {
public:
   
    int fib(int n) {
        int pre2=0;
        int pre1=1;
        int cur=0;
        for(int i=2;i<=n;i++)
        {
           cur=pre2+pre1;
            pre2=pre1;
            pre1=cur;
            
        }
        if(n<=1)
            return n;
        else
            return cur;
        
    }
};

Space Optimisation
T.C.  : O(N);
S.C.  :O(1);
